/**
 * This class is generated by jOOQ
 */
package com.torres999.sprintboot.shiro.dao.jooq;


import com.torres999.sprintboot.shiro.dao.jooq.tables.Author;
import com.torres999.sprintboot.shiro.dao.jooq.tables.Book;
import com.torres999.sprintboot.shiro.dao.jooq.tables.GirlEntity;
import com.torres999.sprintboot.shiro.dao.jooq.tables.TestIdx;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Shiro extends SchemaImpl {

    private static final long serialVersionUID = 1314428645;

    /**
     * The reference instance of <code>shiro</code>
     */
    public static final Shiro SHIRO = new Shiro();

    /**
     * The table <code>shiro.author</code>.
     */
    public final Author AUTHOR = com.torres999.sprintboot.shiro.dao.jooq.tables.Author.AUTHOR;

    /**
     * The table <code>shiro.book</code>.
     */
    public final Book BOOK = com.torres999.sprintboot.shiro.dao.jooq.tables.Book.BOOK;

    /**
     * The table <code>shiro.girl_entity</code>.
     */
    public final GirlEntity GIRL_ENTITY = com.torres999.sprintboot.shiro.dao.jooq.tables.GirlEntity.GIRL_ENTITY;

    /**
     * test table
     */
    public final TestIdx TEST_IDX = com.torres999.sprintboot.shiro.dao.jooq.tables.TestIdx.TEST_IDX;

    /**
     * No further instances allowed
     */
    private Shiro() {
        super("shiro", null);
    }


    /**
     * {@inheritDoc}
     */
    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        List result = new ArrayList();
        result.addAll(getTables0());
        return result;
    }

    private final List<Table<?>> getTables0() {
        return Arrays.<Table<?>>asList(
            Author.AUTHOR,
            Book.BOOK,
            GirlEntity.GIRL_ENTITY,
            TestIdx.TEST_IDX);
    }
}
